<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
		init-method="init" destroy-method="shutdownForce">
		<constructor-arg>
			<!-- 여기에 Atomikos 프로퍼티 위치 -->
			<props>
				<prop key="com.atomikos.icatch.service">
					com.atomikos.icatch.standalone.UserTransactionServiceFactory 
            </prop>
			</props>
		</constructor-arg>
	</bean>

	<!--  Atomikos UserTransactionManager 생성. 스프링 설정에 필요함 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close" depends-on="userTransactionService">
		<property name="forceShutdown" value="false" />
	</bean>

	<!-- Atomikos UserTransactionImp 생성. 스프링 설정에 필요함 -->
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
		depends-on="userTransactionService">
		<property name="transactionTimeout" value="300" />
	</bean>

	<!-- Atomikos를 사용하는 스프링 JtaTransactionManager 설정 -->
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager"
		depends-on="userTransactionService">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
	</bean>

	<bean id="billingDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="BILLDB" />
		<property name="xaDataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">root</prop>
				<prop key="password"></prop>
				<prop key="url">jdbc:mysql://localhost/z_billing?useUnicode=true&amp;characterEncoding=euckr
				</prop>
			</props>
		</property>
		<property name="poolSize" value="1" />
	</bean>
	
	<bean id="storeDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="STOREDB" />
		<property name="xaDataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">root</prop>
				<prop key="password"></prop>
				<prop key="url">jdbc:mysql://localhost/z_store?useUnicode=true&amp;characterEncoding=euckr
				</prop>
			</props>
		</property>
		<property name="poolSize" value="1" />
	</bean>
	
	<bean id="itemDao" class="madvirus.spring.chap09.store.dao.jdbc.JdbcItemDao">
		<constructor-arg>
			<ref bean="storeDataSource" />
		</constructor-arg>
	</bean>

	<bean id="paymentInfoDao"
		class="madvirus.spring.chap09.store.dao.jdbc.JdbcPaymentInfoDao">
		<constructor-arg>
			<ref bean="billingDataSource" />
		</constructor-arg>
	</bean>

	<bean id="purchaseOrderDao"
		class="madvirus.spring.chap09.store.dao.jdbc.JdbcPurchaseOrderDao">
		<constructor-arg>
			<ref bean="storeDataSource" />
		</constructor-arg>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="placeOrderService" 
		class="madvirus.spring.chap09.store.domain.PlaceOrderServiceAnnotImpl"
		p:itemDao-ref="itemDao" p:paymentInfoDao-ref="paymentInfoDao"
		p:purchaseOrderDao-ref="purchaseOrderDao" />

</beans>